.doc {
  min-height: calc(100vh - 13.822rem);
}

@media screen and (min-width: 1920px) {
  .doc {
    max-width: 72rem;
    font-size: .875rem;
  }
}

body {
  font-family: acumin-pro,Helvetica,Arial,sans-serif;
  font-size: 1em;
  padding-top: 5.722rem;
}

footer.footer {
  font-size: .75rem;
  background-color: #fcfcfc;
  color: #5d5d5d;
  font-weight: 100;
  height: 3.125rem;
  width: 100%;
}

table.tableblock {
  border: 1px solid #e1e1e1;
  border-radius: 3px;
}

.tableblock th.tableblock {
  font-weight: bold;
}

.nav {
  background-color: #f8f8f8;
  border-right: 1px solid #eaeaea;
  height: calc(100vh - 5.722rem);
  top: 5.722rem;
}

.main {
  background-color: #fcfcfc;
}

.doc > h1 {
  font-size: 2em;
  margin: 1.5rem 0;
  font-weight: 700;
}

.navbar {
  top: 40px;
}

.toolbar {
  top: 5.722rem;
}

#rhbar {
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 4;
}

.navbar {
  background-color: #656565;
}

.navbar-end > a.navbar-item {
  color: #e6e7e8;
}

.navbar-end > a.navbar-item:hover {
  background-color: #656565;
  color: #ffffff;
}

.nav-menu > .nav-list {
  margin-bottom: 2.5rem; /* make sure last item is visible */
}

.page-versions-container {
  display: none;
  padding-top: 12px;
}

@media screen and (min-width: 1024px) {
  .page-versions-container {
    display: inline-flex;
  }
}

.page-versions {
  margin-top: -7px;
}

@media screen and (max-width: 1023px) {
  .navbar-menu {
    background: #656565;
  }
}

.navbar-end > a.navbar-item:hover {
  color: #ffffff;
}

/* Render article with full width */
.doc {
  max-width: 72rem;
}

/* Keep images scaled down a bit */
.doc .image img {
  max-width: 100%;
}

/*
.page-versions .versions-menu-select {
    display: none;
}

.page-versions.is-active .versions-menu-current {
    display: none;
}

.page-versions.is-active .versions-menu-select {
    display: inline-block;
}
*/

.page-versions.is-active .version.is-current {
    display: block;
}

.page-versions .version-menu {
    border: 1px solid #ccc;
    padding: .15rem .5rem .5rem;
    top: -5px;
    left: 8px;
    width: 75%;
    z-index: 10;
}

.doc a, .doc.with-toc a {
    color: #1565c0;
    text-decoration: none;
}

.doc a:hover, .doc.with-toc a:hover {
    color: #104d92;
    text-decoration: underline;
}

@media screen and (min-width: 1200px) {
  /* by default the TOC won't be shown until the with-toc class is added */
  .doc .toc {
    display: none;
  }

  /* makes sure that child sections scroll to the same point as parent section headings */
  .doc.with-toc h3:not(.discrete) {
    padding-top: .4rem;
  }

  .doc.with-toc {
    max-width: 30rem;
  }

  /* Reposition TOC when exists */
  .doc.with-toc .toc {
    display: block;
    max-width: 100%;
    height: 100%;
    padding: 5px;
    margin-left: 15px;
    margin-bottom: 15px;
    background-color: #fafafa;
    border: 1px solid #e8e8e8;
    border-top: none;
    border-right: none;
    border-bottom: none;
    position: fixed;
    top: 148px;
    left: calc(30rem + 350px);
    right: 0;
    color: #222;
    overflow-y: auto;
    height: calc(100vh - 8.25rem);
  }

  .doc.with-toc .toc::-webkit-scrollbar {
    width: .25rem;
  }

  .doc.with-toc .toc::-webkit-scrollbar-thumb {
    background-color: #c1c1c1;
  }

  /* Keep title hidden */
  .doc.with-toc .toc > .title {
    display: none;
    height: 0;
  }

  .doc.with-toc .toc ul {
    padding-left: 20px;
  }

  .doc.with-toc .toc > ul {
    padding-inline-start: 0px;
    padding-right: 10px;
    font-size: .7rem;
    line-height: 1.2;
  }

  .doc.with-toc .toc > ul ul li {
    margin-top: .5em;
  }

  .doc.with-toc #toc a {
    color: inherit;
    text-decoration: none;
  }

  .doc.with-toc #toc a:hover {
    color: inherit;
    text-decoration: underline;
  }

  .doc.with-toc .toc ul > li {
    list-style: none;
  }

  .doc.with-toc .toc ul.sectlevel1 > li:before {
    content: '';
    display: inline-block;
    height: 1.15rem;
    width: 8px;
    /*
    background: transparent url(../img/caret.svg);
    background-repeat: no-repeat;
    background-size: 50% 50%;
    background-position: 7px 11px;
    */
  }

  .doc.with-toc .toc ul.sectlevel1 > li.expanded:before {
    content: '';
    display: inline-block;
    height: 1.15rem;
    width: 8px;
    /*
    background: transparent url(../img/caret.svg);
    background-repeat: no-repeat;
    background-size: 50% 50%;
    background-position: 11px 3px;
    transform: rotate(90deg);
    */
  }
}

@media screen and (min-width: 1350px) {
  .doc.with-toc {
    max-width: 37rem;
  }

  .doc.with-toc .toc {
    left: calc(37rem + 350px);
  }
}

@media screen and (min-width: 1450px) {
  .doc.with-toc {
    max-width: 44rem;
  }

  .doc.with-toc .toc {
    left: calc(44rem + 350px);
  }
}

@media screen and (min-width: 1600px) {
  .doc.with-toc {
    max-width: 50rem;
  }

  .doc.with-toc .toc {
    left: calc(50rem + 350px);
  }
}

@media screen and (min-width: 1675px) {
  .doc.with-toc {
    max-width: 55rem;
  }

  .doc.with-toc .toc {
    left: calc(55rem + 350px);
  }
}

@media screen and (min-width: 1750px) {
  .doc.with-toc {
    max-width: 60rem;
  }

  .doc.with-toc .toc {
    left: calc(60rem + 350px);
  }
}

@media screen and (min-width: 1850px) {
  .doc.with-toc {
    max-width: 65rem;
  }

  .doc.with-toc .toc {
    left: calc(65rem + 350px);
  }
}

@media screen and (min-width: 1920px) {
  .doc.with-toc {
    max-width: 72rem;
  }

  .doc.with-toc .toc {
    left: calc(72rem + 350px);
    right: 0;
  }
}

/**
 * Particularly on the connector properties and data-types sections of our documentation,
 * we have tables that contain code blocks and these tables are designed to stretch, but
 * the code block word break behavior is based upon spaces and often can be an issue
 * when referencing packages or certain string formats; ergo the table stretches wider
 * than expected when rendering on smaller screens or browser window sizes.
 *
 * These CSS are meant to be used on a case-by-case basis, meaning that these only need
 * be applied to tables where its expected or known that such rendered <code> sections
 * will cause the table to expand wider than anticipated.
 *
 * To use these, simply add either "code-wordbreak-col" or "code-wordbreak-colX", where
 * X represents the column desired to apply the formatting starting at 1 and up to 5,
 * to the Asciidoc role of the table, e.g.:
 *
 * [cols="50%a,50%a",role="table table-striped code-wordbreak-col2"]
 *
 * See the "[[data-types]]" section in the PostgreSQL documentation for an example.
 */
@media screen and (max-width: 1674px) {
  /* explicitly specifies word-break normal in paragraph types in columns specifying code-wordbreak */
  .doc table.code-wordbreak-col td p,
  .doc table.code-wordbreak-col1 td:nth-child(1) p,
  .doc table.code-wordbreak-col2 td:nth-child(2) p,
  .doc table.code-wordbreak-col3 td:nth-child(3) p,
  .doc table.code-wordbreak-col4 td:nth-child(4) p,
  .doc table.code-wordbreak-col5 td:nth-child(5) p {
    word-break: normal;
  }

  /* applies word break to all p > code elements */
  .doc table.code-wordbreak-col td p code,
  .doc table.code-wordbreak-col1 td:nth-child(1) p code,
  .doc table.code-wordbreak-col2 td:nth-child(2) p code,
  .doc table.code-wordbreak-col3 td:nth-child(3) p code,
  .doc table.code-wordbreak-col4 td:nth-child(4) p code,
  .doc table.code-wordbreak-col5 td:nth-child(5) p code {
    word-break: break-all;
  }
}