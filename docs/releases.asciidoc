= Debezium Change Log
:awestruct-layout: doc
:linkattrs:
:icons: font

All notable changes for Debezium releases are documented in this file. Release numbers follow http://semver.org[Semantic Versioning].



[[release-0-2-3]]
== *Release 0.2.3* _(July 26, 2016)_

See the https://issues.jboss.org/browse/DBZ/versions/12330932[complete list of issues]. There are no known issues upgrading a connector to 0.2.3 from earlier 0.2.x versions.

=== Kafka compatibility

This release can be used with Kafka Connect 0.9.0.1 (or a subsequent API-compatible release), and is known to be _incompatible_ with Kafka Connect 0.10.0 due to https://issues.apache.org/jira/browse/KAFKA-3006[binary incompatible changes in the Kafka 0.10.0 API]. See https://issues.jboss.org/projects/DBZ/issues/DBZ-80[DBZ-80] for details.

=== Fixes

* Corrected parsing errors when MySQL DDL statements are generated by Liquibase. https://issues.jboss.org/projects/DBZ/issues/DBZ-83[DBZ-83]
* Corrected support of MySQL TINYINT and SMALLINT types. https://issues.jboss.org/projects/DBZ/issues/DBZ-84[DBZ-84], https://issues.jboss.org/projects/DBZ/issues/DBZ-87[DBZ-87]
* Corrected support of MySQL temporal types, including DATE, TIME, and TIMESTAMP. https://issues.jboss.org/projects/DBZ/issues/DBZ-85[DBZ-85]
* Corrected call to MySQL SHOW MASTER STATUS so that it works on pre-5.7 versions of MySQL. https://issues.jboss.org/projects/DBZ/issues/DBZ-82[DBZ-82]

=== Upgrading

Upgrading a connector to 0.2.3 from 0.2.2 should be straightforward: gracefully stop the running 0.2.2 connector, remove the 0.2.2 plugin files, install the 0.2.3 plugin files, and restart the connector using the same configuration. Upon restart, the 0.2.3 connector will continue where the previous connector left off. As one might expect, all change events previously written to Kafka by the old connector will not be modified.


[[release-0-2-2]]
== *Release 0.2.2* _(June 22, 2016)_

See the https://issues.jboss.org/browse/DBZ/versions/12330862[complete list of issues]. There are no problems upgrading a connector to 0.2.2 from 0.2.0 or 0.2.1.

=== Kafka compatibility

This release can be used with Kafka Connect 0.9.0.1 (or a subsequent API-compatible release), and is known to be _incompatible_ with Kafka Connect 0.10.0 due to https://issues.apache.org/jira/browse/KAFKA-3006[binary incompatible changes in the Kafka 0.10.0 API]. See https://issues.jboss.org/projects/DBZ/issues/DBZ-80[DBZ-80] for details.

=== Backwards-incompatible changes

* Removed several methods in the `GtidSet` class inside the MySQL connector. The class was introduced in 0.2. This change will only affect applications explicitly using the class (by reusing the MySQL connector JAR), and will not affect how the MySQL connector works. https://issues.jboss.org/projects/DBZ/issues/DBZ-79[DBZ-79]
* The `source` field within each MySQL change event now contains the binlog position of that event (rather than the next event). The structure of the change events (and semantics of other values remain) the same as with 0.2.1. Note that this change _may_ adversely clients that are explicitly comparing the position values across multiple events. https://issues.jboss.org/projects/DBZ/issues/DBZ-71[DBZ-71]

=== Fixes

* Correct how the MySQL connector records offsets with multi-row MySQL events so that, even if the connector experiences a non-graceful shutdown (i.e., crash) after committing the offset of _some_ of the rows from such an event, upon restart the connector will resume with the remaining rows in that multi-row event. Previously, the connector might incorrectly restart at the next event. https://issues.jboss.org/projects/DBZ/issues/DBZ-73[DBZ-73]
* Shutdown of the MySQL connector immediately after a snapshot completes (before another change event is reccorded) will now be properly marked as complete. https://issues.jboss.org/projects/DBZ/issues/DBZ-77[DBZ-77]

=== Upgrading

Upgrading a connector to 0.2.2 from 0.2.1 should be straightforward: gracefully stop the running 0.2.1 connector, remove the 0.2.1 plugin files, install the 0.2.2 plugin files, and restart the connector using the same configuration. Upon restart, the 0.2.2 connector will continue where the previous connector left off. As one might expect, all change events previously written to Kafka by the old connector will not be modified.


[[release-0-2-1]]
== *Release 0.2.1* _(June 10, 2016)_

See the https://issues.jboss.org/browse/DBZ/fixforversion/12330752[complete list of issues]

=== Kafka compatibility

This release can be used with Kafka Connect 0.9.0.1 (or a subsequent API-compatible release), and is known to be _incompatible_ with Kafka Connect 0.10.0 due to https://issues.apache.org/jira/browse/KAFKA-3006[binary incompatible changes in the Kafka 0.10.0 API]. https://issues.jboss.org/projects/DBZ/issues/DBZ-80[DBZ-80]

=== Backwards-incompatible changes

* Corrected the names of the Avro-compliant Kafka Connect schemas generated by the MySQL connector for the `before` and `after` fields in its data change events. Consumers that require knowledge (by name) of the particular schemas used in 0.2 events may have trouble consuming events produced by the 0.2.1 (or later) connector. https://issues.jboss.org/projects/DBZ/issues/DBZ-72[DBZ-72]

=== Fixes

* The MySQL connector's plugin archive now contains the MySQL JDBC driver JAR file required by the connector. https://issues.jboss.org/projects/DBZ/issues/DBZ-71[DBZ-71]



[[release-0-2-0]]
== *Release 0.2.0* _(June 8, 2016)_

See the https://issues.jboss.org/browse/DBZ/fixforversion/12329465[complete list of issues] addressed in this release.

[WARNING]
====
The 0.2.0 release contained a significant issue, and link:#release-0-2-1[0.2.1] was quickly released to fix the problem. We recommend using a newer release than 0.2.
====

=== Backwards-incompatible changes

* Completely redesigned the structure of event messages produced by MySQL connector and stored in Kafka topics. Events now contain an _envelope_ structure with information about the source event, the kind of operation (create/insert, update, delete, read), the time that Debezium processed the event, and the state of the row before and/or after the event. The messages written to each topic have a distinct Avro-compliant Kafka Connect schema that reflects the structure of the source table, which may vary over time independently from the schemas of all other topics. See the http://debezium.io/docs/connectors/mysql#events[documentation] for details. This envelope structure will likely be used by future connectors. https://issues.jboss.org/projects/DBZ/issues/DBZ-50[DBZ-50], https://issues.jboss.org/projects/DBZ/issues/DBZ-52[DBZ-52], https://issues.jboss.org/projects/DBZ/issues/DBZ-45[DBZ-45], https://issues.jboss.org/projects/DBZ/issues/DBZ-60[DBZ-60]
* MySQL connector handles deletion of a row by recording a delete event message whose value contains the state of the removed row (and other metadata), followed by a _tombstone event_ message with a null value to signal *Kafka's log compaction* that all messages with the same key can be garbage collected. See the http://debezium.io/docs/connectors/mysql#events[documentation] for details. https://issues.jboss.org/projects/DBZ/issues/DBZ-44[DBZ-44]
* Changed the format of events that the MySQL connector writes to its schema change topic, through which consumers can access events with the DDL statements applied to the database(s). The format change makes it possible for consumers to correlate these events with the data change events. https://issues.jboss.org/projects/DBZ/issues/DBZ-43[DBZ-43], https://issues.jboss.org/projects/DBZ/issues/DBZ-55[DBZ-55]

=== New features

* MySQL connector supports *high availability* MySQL cluster topologies. See the http://debezium.io/docs/connectors/mysql[documentation] for details. https://issues.jboss.org/projects/DBZ/issues/DBZ-37[DBZ-37]
* MySQL connector now by default starts by performing a *consistent snapshot* of the schema and contents of the upstream MySQL databases in its current state. See the http://debezium.io/docs/connectors/mysql#snapshots[documentation] for details about how this works and how it impacts other database clients. https://issues.jboss.org/projects/DBZ/issues/DBZ-31[DBZ-31]
* MySQL connector can be configured to *exclude*, *truncate*, or *mask* specific columns in events. https://issues.jboss.org/projects/DBZ/issues/DBZ-29[DBZ-29]
* MySQL connector events can be serialized using the http://docs.confluent.io/3.0.0/avro.html[Confluent Avro converter] or the JSON converter. Previously, only the JSON converter could be used. https://issues.jboss.org/projects/DBZ/issues/DBZ-29[DBZ-29], https://issues.jboss.org/projects/DBZ/issues/DBZ-63[DBZ-63], https://issues.jboss.org/projects/DBZ/issues/DBZ-64[DBZ-64]

=== Changes

* DDL parsing framework identifies table affected by statements via a new listener callback. https://issues.jboss.org/projects/DBZ/issues/DBZ-38[DBZ-38]
* The `database.binlog` configuration property was required in version 0.1 of the MySQL connector, but now it is no longer used because of the new snapshot feature. If provided, it will be quietly ignored. https://issues.jboss.org/projects/DBZ/issues/DBZ-31[DBZ-31]

=== Bug fixes

* MySQL connector now properly parses `COMMIT` statements, the `REFERENCES` clauses of `CREATE TABLE` statements, and statements with `CHARSET` shorthand of `CHARACTER SET`. https://issues.jboss.org/projects/DBZ/issues/DBZ-48[DBZ-48], https://issues.jboss.org/projects/DBZ/issues/DBZ-49[DBZ-49], https://issues.jboss.org/projects/DBZ/issues/DBZ-57[DBZ-57]
* MySQL connector properly handles binary values that are hexadecimal strings https://issues.jboss.org/projects/DBZ/issues/DBZ-61[DBZ-61]



[[release-0-1-0]]
== *Release 0.1.0* _(March 17, 2016)_

See the https://issues.jboss.org/browse/DBZ/fixforversion/12329464[complete list of issues] addressed in this release.

=== Kafka compatibility

This release can be used with Kafka Connect 0.9.0.1 (or a subsequent API-compatible release).

=== Added

* MySQL connector for ingesting change events from MySQL databases. https://issues.jboss.org/projects/DBZ/issues/DBZ-1[DBZ-1]
* Kafka Connect plugin archive for MySQL connector. https://issues.jboss.org/projects/DBZ/issues/DBZ-17[DBZ-17]
* Simple DDL parsing framework that can be extended and used by various connectors. https://issues.jboss.org/projects/DBZ/issues/DBZ-1[DBZ-1]
* Framework for embedding a single Kafka Connect connector inside an application. https://issues.jboss.org/projects/DBZ/issues/DBZ-8[DBZ-8]
